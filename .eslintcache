[{"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\index.js":"1","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\App.js":"2","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\Main.js":"3","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\Footer.js":"4","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\NavBar.js":"5","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\Resume.js":"6","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\Contact.js":"7","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\AboutMe.js":"8","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\Portfolio.js":"9","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\reportWebVitals.js":"10","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\utils\\helpers.js":"11"},{"size":215,"mtime":1670248595612,"results":"12","hashOfConfig":"13"},{"size":200,"mtime":1670247145244,"results":"14","hashOfConfig":"13"},{"size":951,"mtime":1670310968962,"results":"15","hashOfConfig":"13"},{"size":1327,"mtime":1670250000809,"results":"16","hashOfConfig":"13"},{"size":1386,"mtime":1670310198668,"results":"17","hashOfConfig":"13"},{"size":1017,"mtime":1670300538284,"results":"18","hashOfConfig":"13"},{"size":3803,"mtime":1670300766606,"results":"19","hashOfConfig":"13"},{"size":999,"mtime":1670300029749,"results":"20","hashOfConfig":"13"},{"size":9219,"mtime":1670300917552,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1670041447932,"results":"22","hashOfConfig":"13"},{"size":293,"mtime":1670250575687,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"au8ye3",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\index.js",[],["49","50"],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\App.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\Main.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\Footer.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\NavBar.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\Resume.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\Contact.js",["51"],"import React, { useState } from \"react\";\r\nimport { validateEmail } from \"../../utils/helpers\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction Contact() {\r\n    const [formState, setFormState] = useState(\r\n        {\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\",\r\n        }\r\n    );\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        let newFormState = { ...formState };\r\n        newFormState[target.name] = target.value;\r\n        setFormState(newFormState);\r\n\r\n        if (validateEmail(newFormState.email)) {\r\n            setErrorMessage(\"\");\r\n        }\r\n    };\r\n\r\n    const checkEmail = () => {\r\n        if (!validateEmail(formState.email)) {\r\n            setErrorMessage(\"Invalid email entry!\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const checkName = () => {\r\n        if (!formState.name.trim()) {\r\n            setErrorMessage(\"Invalid name entry!\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const checkMessage = () => {\r\n        if (!formState.message.trim()) {\r\n            setErrorMessage(\"Invalid message entry!\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (checkEmail() && checkName() && checkMessage()) {\r\n            alert(`Received your message. Thank you!`);\r\n            setFormState(\r\n                {\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    message: \"\",\r\n                }\r\n            )\r\n        } else if (!checkName()) {\r\n            alert(`Invalid name entry!`);\r\n        } else if (!checkEmail()) {\r\n            alert(`Invalid email entry!`);\r\n        }\r\n        else if (!checkMessage()) {\r\n            alert(`Invalid message entry!`);\r\n        }\r\n        else {\r\n            alert(`Cannot receive your message, try again!`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center text-light pt-3\"><b>Contact Me!</b></h2>\r\n            <Form>\r\n                <Form.Group className=\"m-2\" controlId=\"formBasicName\">\r\n                    <Form.Label>Your Name</Form.Label>\r\n                    <Form.Control\r\n                        value={formState.name}\r\n                        name=\"name\"\r\n                        onChange={handleInputChange}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"m-2\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <Form.Control\r\n                        value={formState.email}\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        type=\"email\"\r\n                        placeholder=\"Email\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"m-2\" controlId=\"formBasicMessage\">\r\n                    <Form.Label>Your Message</Form.Label>\r\n                    <Form.Control\r\n                        value={formState.message}\r\n                        name=\"message\"\r\n                        onChange={handleInputChange}\r\n                        as=\"textarea\"\r\n                        aria-label=\"Your message\"\r\n                        placeholder=\"Message\" />\r\n                </Form.Group>\r\n                <Button className=\"m-4 text-dark\" variant=\"secondary\" onClick={handleFormSubmit} type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\AboutMe.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\components\\pages\\Portfolio.js",[],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\reportWebVitals.js",[],["52","53"],"C:\\Users\\mehme\\Desktop\\Lesson Notes\\11th-week\\Challenges\\React-Portfolio\\src\\utils\\helpers.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":14,"column":12,"nodeType":"60","messageId":"61","endLine":14,"endColumn":24},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar",["64"],["65"],"no-global-assign","no-unsafe-negation"]